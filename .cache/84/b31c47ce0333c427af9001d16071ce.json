{"id":"../node_modules/shortid/lib/generate.js","dependencies":[{"name":"/home/phoenix/Desktop/Projects/CargoDB/package.json","includedInParent":true,"mtime":1588774568959},{"name":"/home/phoenix/Desktop/Projects/CargoDB/node_modules/shortid/package.json","includedInParent":true,"mtime":1586516094699},{"name":"./alphabet","loc":{"line":3,"column":23},"parent":"/home/phoenix/Desktop/Projects/CargoDB/node_modules/shortid/lib/generate.js","resolved":"/home/phoenix/Desktop/Projects/CargoDB/node_modules/shortid/lib/alphabet.js"},{"name":"./random/random-byte","loc":{"line":4,"column":21},"parent":"/home/phoenix/Desktop/Projects/CargoDB/node_modules/shortid/lib/generate.js","resolved":"/home/phoenix/Desktop/Projects/CargoDB/node_modules/shortid/lib/random/random-byte.js"}],"generated":{"js":"'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/shortid/lib/generate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/shortid/lib/generate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}}],"sources":{"../node_modules/shortid/lib/generate.js":"'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n"},"lineCount":22}},"error":null,"hash":"d446bb11d6124d52b6c124a5b53e52ed","cacheData":{"env":{}}}