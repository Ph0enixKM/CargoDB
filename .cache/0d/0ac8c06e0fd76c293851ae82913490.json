{"id":"EQbp","dependencies":[{"name":"/home/phoenix/Desktop/Projects/CargoDB/package.json","includedInParent":true,"mtime":1588524815884},{"name":"/home/phoenix/Desktop/Projects/CargoDB/node_modules/shortid/package.json","includedInParent":true,"mtime":1586516094699},{"name":"./generate","loc":{"line":3,"column":23},"parent":"/home/phoenix/Desktop/Projects/CargoDB/node_modules/shortid/lib/build.js","resolved":"/home/phoenix/Desktop/Projects/CargoDB/node_modules/shortid/lib/generate.js"},{"name":"./alphabet","loc":{"line":4,"column":23},"parent":"/home/phoenix/Desktop/Projects/CargoDB/node_modules/shortid/lib/build.js","resolved":"/home/phoenix/Desktop/Projects/CargoDB/node_modules/shortid/lib/alphabet.js"}],"generated":{"js":"\"use strict\";var e,r,t=require(\"./generate\"),a=require(\"./alphabet\"),o=1567752802062,u=7;function n(a){var n=\"\",i=Math.floor(.001*(Date.now()-o));return i===r?e++:(e=0,r=i),n+=t(u),n+=t(a),e>0&&(n+=t(e)),n+=t(i)}module.exports=n;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/shortid/lib/build.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":3,"column":0},"generated":{"line":1,"column":13}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":16,"column":0},"generated":{"line":1,"column":17}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":19,"column":0},"generated":{"line":1,"column":19}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":3,"column":0},"generated":{"line":1,"column":21}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":3,"column":0},"generated":{"line":1,"column":23}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":3,"column":0},"generated":{"line":1,"column":31}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":4,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":4,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":4,"column":0},"generated":{"line":1,"column":55}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":9,"column":0},"generated":{"line":1,"column":69}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":9,"column":0},"generated":{"line":1,"column":71}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":13,"column":0},"generated":{"line":1,"column":85}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":13,"column":0},"generated":{"line":1,"column":87}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":25,"column":0},"generated":{"line":1,"column":89}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":25,"column":0},"generated":{"line":1,"column":98}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":25,"column":0},"generated":{"line":1,"column":100}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":26,"column":0},"generated":{"line":1,"column":103}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":26,"column":0},"generated":{"line":1,"column":107}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":26,"column":0},"generated":{"line":1,"column":109}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":28,"column":0},"generated":{"line":1,"column":112}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":28,"column":0},"generated":{"line":1,"column":114}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":28,"column":0},"generated":{"line":1,"column":119}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":28,"column":0},"generated":{"line":1,"column":125}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":28,"column":0},"generated":{"line":1,"column":131}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":28,"column":0},"generated":{"line":1,"column":136}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":28,"column":0},"generated":{"line":1,"column":142}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":43,"column":0},"generated":{"line":1,"column":146}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":30,"column":0},"generated":{"line":1,"column":153}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":30,"column":0},"generated":{"line":1,"column":157}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":31,"column":0},"generated":{"line":1,"column":159}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":33,"column":0},"generated":{"line":1,"column":164}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":33,"column":0},"generated":{"line":1,"column":166}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":34,"column":0},"generated":{"line":1,"column":168}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":34,"column":0},"generated":{"line":1,"column":170}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":37,"column":0},"generated":{"line":1,"column":173}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":37,"column":0},"generated":{"line":1,"column":176}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":37,"column":0},"generated":{"line":1,"column":178}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":38,"column":0},"generated":{"line":1,"column":181}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":38,"column":0},"generated":{"line":1,"column":184}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":38,"column":0},"generated":{"line":1,"column":186}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":39,"column":0},"generated":{"line":1,"column":189}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":39,"column":0},"generated":{"line":1,"column":191}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":40,"column":0},"generated":{"line":1,"column":195}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":40,"column":0},"generated":{"line":1,"column":198}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":40,"column":0},"generated":{"line":1,"column":200}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":42,"column":0},"generated":{"line":1,"column":204}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":42,"column":0},"generated":{"line":1,"column":207}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":42,"column":0},"generated":{"line":1,"column":209}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":46,"column":0},"generated":{"line":1,"column":212}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":46,"column":0},"generated":{"line":1,"column":219}},{"source":"../node_modules/shortid/lib/build.js","original":{"line":46,"column":0},"generated":{"line":1,"column":227}}],"sources":{"../node_modules/shortid/lib/build.js":"'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n"},"lineCount":null}},"error":null,"hash":"1b3c1b6a5b4399faceeb777422349494","cacheData":{"env":{}}}