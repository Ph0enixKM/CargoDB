{"id":"NDAa","dependencies":[{"name":"/home/phoenix/Desktop/Projects/CargoDB/package.json","includedInParent":true,"mtime":1588524815884},{"name":"/home/phoenix/Desktop/Projects/CargoDB/node_modules/nanoid/package.json","includedInParent":true,"mtime":1586516094699}],"generated":{"js":"var r=require(\"crypto\");if(r.randomFillSync){var e={};module.exports=function(o){var l=e[o];return l||(l=Buffer.allocUnsafe(o),o<=255&&(e[o]=l)),r.randomFillSync(l)}}else module.exports=r.randomBytes;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/nanoid/random.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/nanoid/random.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/nanoid/random.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/nanoid/random.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/nanoid/random.js","original":{"line":3,"column":0},"generated":{"line":1,"column":24}},{"source":"../node_modules/nanoid/random.js","original":{"line":3,"column":0},"generated":{"line":1,"column":27}},{"source":"../node_modules/nanoid/random.js","original":{"line":3,"column":0},"generated":{"line":1,"column":29}},{"source":"../node_modules/nanoid/random.js","original":{"line":3,"column":0},"generated":{"line":1,"column":44}},{"source":"../node_modules/nanoid/random.js","original":{"line":6,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/nanoid/random.js","original":{"line":6,"column":0},"generated":{"line":1,"column":49}},{"source":"../node_modules/nanoid/random.js","original":{"line":6,"column":0},"generated":{"line":1,"column":51}},{"source":"../node_modules/nanoid/random.js","original":{"line":7,"column":0},"generated":{"line":1,"column":54}},{"source":"../node_modules/nanoid/random.js","original":{"line":7,"column":0},"generated":{"line":1,"column":61}},{"source":"../node_modules/nanoid/random.js","original":{"line":7,"column":0},"generated":{"line":1,"column":69}},{"source":"../node_modules/nanoid/random.js","original":{"line":7,"column":0},"generated":{"line":1,"column":78}},{"source":"../node_modules/nanoid/random.js","original":{"line":8,"column":0},"generated":{"line":1,"column":81}},{"source":"../node_modules/nanoid/random.js","original":{"line":8,"column":0},"generated":{"line":1,"column":85}},{"source":"../node_modules/nanoid/random.js","original":{"line":8,"column":0},"generated":{"line":1,"column":87}},{"source":"../node_modules/nanoid/random.js","original":{"line":8,"column":0},"generated":{"line":1,"column":89}},{"source":"../node_modules/nanoid/random.js","original":{"line":15,"column":0},"generated":{"line":1,"column":92}},{"source":"../node_modules/nanoid/random.js","original":{"line":9,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/nanoid/random.js","original":{"line":12,"column":0},"generated":{"line":1,"column":103}},{"source":"../node_modules/nanoid/random.js","original":{"line":12,"column":0},"generated":{"line":1,"column":105}},{"source":"../node_modules/nanoid/random.js","original":{"line":12,"column":0},"generated":{"line":1,"column":112}},{"source":"../node_modules/nanoid/random.js","original":{"line":12,"column":0},"generated":{"line":1,"column":124}},{"source":"../node_modules/nanoid/random.js","original":{"line":13,"column":0},"generated":{"line":1,"column":127}},{"source":"../node_modules/nanoid/random.js","original":{"line":13,"column":0},"generated":{"line":1,"column":130}},{"source":"../node_modules/nanoid/random.js","original":{"line":13,"column":0},"generated":{"line":1,"column":136}},{"source":"../node_modules/nanoid/random.js","original":{"line":13,"column":0},"generated":{"line":1,"column":138}},{"source":"../node_modules/nanoid/random.js","original":{"line":13,"column":0},"generated":{"line":1,"column":141}},{"source":"../node_modules/nanoid/random.js","original":{"line":15,"column":0},"generated":{"line":1,"column":145}},{"source":"../node_modules/nanoid/random.js","original":{"line":15,"column":0},"generated":{"line":1,"column":147}},{"source":"../node_modules/nanoid/random.js","original":{"line":15,"column":0},"generated":{"line":1,"column":162}},{"source":"../node_modules/nanoid/random.js","original":{"line":18,"column":0},"generated":{"line":1,"column":171}},{"source":"../node_modules/nanoid/random.js","original":{"line":18,"column":0},"generated":{"line":1,"column":178}},{"source":"../node_modules/nanoid/random.js","original":{"line":18,"column":0},"generated":{"line":1,"column":186}},{"source":"../node_modules/nanoid/random.js","original":{"line":18,"column":0},"generated":{"line":1,"column":188}}],"sources":{"../node_modules/nanoid/random.js":"var crypto = require('crypto')\n\nif (crypto.randomFillSync) {\n  // We reuse buffers with the same size to avoid memory fragmentations\n  // for better performance\n  var buffers = { }\n  module.exports = function (bytes) {\n    var buffer = buffers[bytes]\n    if (!buffer) {\n      // `Buffer.allocUnsafe()` faster because it donâ€™t clean memory.\n      // We do not need it, since we will fill memory with new bytes anyway.\n      buffer = Buffer.allocUnsafe(bytes)\n      if (bytes <= 255) buffers[bytes] = buffer\n    }\n    return crypto.randomFillSync(buffer)\n  }\n} else {\n  module.exports = crypto.randomBytes\n}\n"},"lineCount":null}},"error":null,"hash":"060d8f95d19cb31b8ba21904a38f77ea","cacheData":{"env":{}}}