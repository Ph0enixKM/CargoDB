{"id":"main.ts","dependencies":[{"name":"/home/phoenix/Desktop/Projects/CargoDB/package.json","includedInParent":true,"mtime":1588774568959},{"name":"./cargo","loc":{"line":19,"column":38},"parent":"/home/phoenix/Desktop/Projects/CargoDB/src/main.ts","resolved":"/home/phoenix/Desktop/Projects/CargoDB/src/cargo.ts"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cargo_1 = __importDefault(require(\"./cargo\"));\n// Async wrapper \n// for Cargo database\nvar CargoAsync = /** @class */ (function (_super) {\n    __extends(CargoAsync, _super);\n    // Cargo constructor\n    function CargoAsync(name, path) {\n        return _super.call(this, name, path) || this;\n    }\n    // Create a synchronous version of Cargo.\n    // Warning: possible collisions may occur\n    CargoAsync.Sync = function (name, path) {\n        return new cargo_1.default(name, path);\n    };\n    // Override Sync set function with async wrapper\n    CargoAsync.prototype.set = function (storage, item) {\n        return _super.prototype.async.call(this, 'set', [storage, item]);\n    };\n    return CargoAsync;\n}(cargo_1.default));\nmodule.exports = CargoAsync;\n"},"sourceMaps":{"js":{"version":3,"file":"main.js","sourceRoot":"","sources":["main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,kDAA+B;AAW/B,iBAAiB;AACjB,qBAAqB;AAErB;IAAyB,8BAAS;IAC9B,oBAAoB;IACpB,oBAAY,IAAY,EAAE,IAAY;eAClC,kBAAM,IAAI,EAAE,IAAI,CAAC;IACrB,CAAC;IAED,yCAAyC;IACzC,yCAAyC;IAClC,eAAI,GAAX,UAAY,IAAY,EAAE,IAAY;QAClC,OAAO,IAAI,eAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;IACpC,CAAC;IAED,gDAAgD;IACzC,wBAAG,GAAV,UAAW,OAAe,EAAE,IAAS;QACjC,OAAO,iBAAM,KAAK,YAAC,KAAK,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAA;IAC9C,CAAC;IACL,iBAAC;AAAD,CAAC,AAhBD,CAAyB,eAAS,GAgBjC;AAGD,MAAM,CAAC,OAAO,GAAG,UAAU,CAAA","sourcesContent":["import CargoSync from './cargo'\nimport CollectionSync from './collection'\n\n// It's a virtual representation\n// of a cargo operation method\ninterface CargoOperation {\n    args: Array<any>\n    method: string\n    callback: Function\n}\n\n// Async wrapper \n// for Cargo database\n\nclass CargoAsync extends CargoSync {\n    // Cargo constructor\n    constructor(name: string, path: string) {\n        super(name, path)\n    }\n\n    // Create a synchronous version of Cargo.\n    // Warning: possible collisions may occur\n    static Sync(name: string, path: string): CargoSync {\n        return new CargoSync(name, path)\n    }\n\n    // Override Sync set function with async wrapper\n    public set(storage: string, item: any) {\n        return super.async('set', [storage, item])\n    }\n}\n\n\nmodule.exports = CargoAsync"]}},"error":null,"hash":"e4333fa09c5dbc389dc356d006eb77b5","cacheData":{"env":{}}}